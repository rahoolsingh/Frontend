import axios from "axios";
import PropTypes from "prop-types";
import { useState } from "react";

function App() {
    const [name, setName] = useState("");
    const [phone, setPhone] = useState("");
    const [price, setPrice] = useState("");
    const uid = "UID" + Date.now();

    const handleSubmit = (e) => {
        e.preventDefault();
        const body = {
            name,
            phone,
            price,
            user_id: uid,
            redirect_url: "https://shine-well.com",
        };
        const headers = {
            "X-Appwrite-Project": "6647165a00244898eb2a",
            "Content-Type": "application/json",
            "X-Appwrite-Key": "976b5c7481f9b7a999033cdbbf494bb0f00e1d2cf8c3a08f73aabca521f9f997077ad91e93104133216454ddc483bbfd54c0df48bc39c1eb155d4b7cf8d36450576bd0846e9d094c8bf26eeade75b9d2afcefa54dcdceb38bdaa0d02a0ffd28cfdc4d2c5e364a3fe8bc0cc15f41cf9229f26793be30cb5c4c15532bb8de66df4"
        };

        axios
            .post("https://6647224337838f29ee15.appwrite.global/payment", {
                headers: headers,
                body: body,
            })
            .then((res) => {
                console.log(res.data);
            });
    };

    return (
        <div>
            <h1 className="text-4xl text-center text-blue-200 font-bold p-10">
                Shine Well Payments
            </h1>

            <form
                className="flex flex-col items-center justify-center"
                onSubmit={handleSubmit}
            >
                <input
                    type="hidden"
                    name="redirect_url"
                    value="https://shine-well.com"
                />
                <input type="hidden" name="uid" value={uid} />
                <FormField
                    label="Name"
                    type="text"
                    placeholder="Name"
                    value={name}
                    required
                    onChange={(e) => setName(e.target.value)}
                />
                <FormField
                    label="Phone"
                    type="tel"
                    placeholder="Phone"
                    value={phone}
                    required
                    onChange={(e) => setPhone(e.target.value)}
                />
                <FormField
                    label="Price"
                    type="amount"
                    placeholder="Price"
                    value={price}
                    required
                    onChange={(e) => setPrice(e.target.value)}
                />
                <button
                    type="submit"
                    className="p-2 m-2 bg-blue-500 text-white"
                >
                    Pay Now
                </button>
            </form>
        </div>
    );
}

export default App;

function FormField({ label, type, placeholder, ...props }) {
    return (
        <div className="flex justify-between w-full max-w-sm px-4 my-1">
            <label htmlFor={label} className="p-2">
                <strong>{label}</strong>
            </label>
            <input
                type={type}
                id={label}
                placeholder={placeholder}
                className="p-2 border-2 border-blue-200"
                {...props}
            />
        </div>
    );
}

FormField.propTypes = {
    label: PropTypes.string.isRequired,
    type: PropTypes.string.isRequired,
    placeholder: PropTypes.string.isRequired,
};
